version: "3.8"
services:
  db:
    image: postgres:13.0-alpine
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
  backend:
    image: 83607rhfd/foodgram:v1.06.2022
    restart: unless-stopped
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
    depends_on:
      - db
    env_file:
      - ./.env
  frontend:
    image: 83607rhfd/frontend-foodgram:v1.06.2022
    restart: always
    volumes:
      - ../frontend/:/app/result_build/
  nginx:
    image: nginx:1.19.3
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./nginx.conf:/etc/nginx/conf.d/default.conf"
      - "./certbot/conf:/etc/letsencrypt"
      - "./certbot/www:/var/www/certbot"
      - "../frontend/build:/usr/share/nginx/html/"
      - "../docs/:/usr/share/nginx/html/api/docs/"
      - "../docs/openapi-schema.yml:/usr/share/nginx/html/api/docs/openapi-schema.yml"
      - "static_value:/var/html/static/"
      - "media_value:/var/html/media/"
    depends_on:
      - backend
      - frontend
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - "./certbot/conf:/etc/letsencrypt"
      - "./certbot/www:/var/www/certbot"
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  postgres_data:
  static_value:
  media_value:
